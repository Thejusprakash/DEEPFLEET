{"version":3,"sources":["components/Header.jsx","components/db/firebase.js","components/billingrow.jsx","components/Addproducts.jsx","App.js","serviceWorker.js","index.js"],"names":["styles","appBar","display","justifyContent","padding","backgroundColor","color","logoContainer","flex","logo","maxWidth","maxHeight","loginContainer","textAlign","loginButton","fontSize","border","borderRadius","cursor","AppBar","style","marginLe","fontFamily","fontWeight","onClick","window","location","href","DB","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","CustomerApp","productCategories","setProductCategories","useState","products","setProducts","selectedProduct","setSelectedProduct","finalBill","setFinalBill","searchTerm","setSearchTerm","useEffect","async","categoriesData","collection","get","docs","map","doc","data","name","fetchCategories","productsData","fetchProducts","type","placeholder","value","onChange","e","target","filter","product","toLowerCase","includes","key","price","className","find","p","taxData","taxSnapshot","category","exists","fetchTaxData","pdf","jsPDF","text","forEach","item","index","taxName","taxRate","total","reduce","acc","length","save","container","flexDirection","alignItems","height","title","marginBottom","formContainer","width","boxShadow","formLabel","formInput","boxSizing","formButton","searchContainer","searchInput","marginRight","searchButton","table","borderCollapse","marginTop","AdminPanel","taxRates","setTaxRates","taxNames","setTaxNames","categoryName","setCategoryName","setTaxRate","setTaxName","productName","setProductName","selectedCategory","setSelectedCategory","selectedTaxName","setSelectedTaxName","productPrice","setProductPrice","errorMessage","setErrorMessage","taxRatesData","rate","fetchTaxRates","taxNamesData","fetchTaxNames","id","error","console","disabled","tax","add","parseFloat","message","filteredProducts","updatedName","prompt","productId","updatedData","set","handleDelete","delete","then","App","exact","path","element","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fd8c68f3.chunk.js","sourcesContent":["import React from 'react';\r\n// import { useHistory } from 'react-router-dom';\r\nconst AppBar = () => {\r\n  const handleLogin = () => {\r\n    // const history = useHistory();\r\n    // Implement your login logic here\r\n    console.log('User clicked login');\r\n  };\r\n  return (\r\n    <div style={styles.appBar}>\r\n      <div style={{}}>\r\n       <p style={{marginLe\r\n        :'0px',fontFamily:'console.assert(first, second)',fontWeight:\"bolder\"}}>BILLING </p>\r\n      </div>\r\n      <div style={styles.loginContainer}>\r\n        <button  onClick={(()=>{\r\n              window.location.href = '/addproducts'\r\n        })}  style={styles.loginButton}>\r\n          Admin\r\n        </button>\r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  appBar: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: '10px',\r\n    backgroundColor: '#2196F3', // Change the background color as needed\r\n    color: '#fff', // Change the text color as needed\r\n  },\r\n  logoContainer: {\r\n    flex: 1,\r\n  },\r\n  logo: {\r\n    maxWidth: '100%',\r\n    maxHeight: '40px', // Adjust the height as needed\r\n  },\r\n  loginContainer: {\r\n    flex: 0.2,\r\n    textAlign: 'right',\r\n  },\r\n  loginButton: {\r\n    padding: '8px 16px',\r\n    fontSize: '14px',\r\n    backgroundColor: '#4CAF50', // Change the button color as needed\r\n    color: '#fff', // Change the text color as needed\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default AppBar;\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyBCzgB_sW4Ol12WTcnJ2A9Q9yfJUaEp6aI\",\r\n  authDomain: \"sensordata-ff1d3.firebaseapp.com\",\r\n  databaseURL: \"https://sensordata-ff1d3-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"sensordata-ff1d3\",\r\n  storageBucket: \"sensordata-ff1d3.appspot.com\",\r\n  messagingSenderId: \"1094614512668\",\r\n  appId: \"1:1094614512668:web:232d53e804b974f5e45bd9\",\r\n  measurementId: \"G-JMR1DV7NMJ\",\r\n});\r\n\r\nconst DB = firebaseApp.firestore();\r\n\r\nexport default DB;\r\n","import React, { useState, useEffect } from 'react';\r\nimport DB from './db/firebase.js';\r\nimport jsPDF from 'jspdf';\r\n\r\n\r\n\r\nconst CustomerApp = () => {\r\n  const [productCategories, setProductCategories] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState('');\r\n  const [finalBill, setFinalBill] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n \r\n\r\n  useEffect(() => {\r\n    // Fetch product categories from Firestore\r\n    const fetchCategories = async () => {\r\n      const categoriesSnapshot = await DB.collection('productCategories').get();\r\n      const categoriesData = categoriesSnapshot.docs.map((doc) => doc.data().name);\r\n      setProductCategories(categoriesData);\r\n    };\r\n\r\n    // Fetch products from Firestore\r\n    const fetchProducts = async () => {\r\n      const productsSnapshot = await DB.collection('products').get();\r\n      const productsData = productsSnapshot.docs.map((doc) => doc.data());\r\n      setProducts(productsData);\r\n    };\r\n\r\n    fetchCategories();\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchTaxData = async (category) => {\r\n    const taxSnapshot = await DB.collection('gstRates').doc(category).get();\r\n    return taxSnapshot.exists ? taxSnapshot.data() : null;\r\n  };\r\n\r\n  const handleCreateSale = async () => {\r\n    if (selectedProduct) {\r\n      const product = products.find((p) => p.name === selectedProduct);\r\n      if (product) {\r\n        const taxData = await fetchTaxData(product.category);\r\n        setFinalBill([...finalBill, { ...product, taxData }]);\r\n        // Clear selected product\r\n        setSelectedProduct('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleGenerateFinalBill = () => {\r\n    const pdf = new jsPDF();\r\n\r\n    // Add content to PDF\r\n    pdf.text('Final Bill', 10, 10);\r\n    finalBill.forEach((item, index) => {\r\n      pdf.text(`${item.name} - ${item.price}$ - Tax: ${item.taxName ? item.taxName : 'N/A'} (${item.taxRate ? item.taxRate : 'N/A'}%)`, 10, 20 + index * 10);\r\n    });\r\n\r\n    // Calculate total\r\n    const total = finalBill.reduce((acc, item) => acc + item.price, 0);\r\n    pdf.text(`Total: ${total}$`, 10, 20 + finalBill.length * 10 + 10);\r\n\r\n    // Save PDF\r\n    pdf.save('final-bill.pdf');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Please Bill Your Order</h1>\r\n\r\n      {/* Search products */}\r\n      <label>\r\n        Search Product:\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by Product Name\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n      </label>\r\n\r\n      {/* Select product for sale */}\r\n      <label>\r\n        Select Product:\r\n        <select onChange={(e) => setSelectedProduct(e.target.value)} value={selectedProduct}>\r\n          <option value=\"\">Select Product</option>\r\n          {products\r\n            .filter((product) => product.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n            .map((product) => (\r\n              <option key={product.name} value={product.name}>\r\n                {product.name} - {product.price}$\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </label>\r\n\r\n      {/* Create Sale */}\r\n      <div>\r\n        <h2>Create Sale</h2>\r\n        <button className='Success' style={{backgroundColor:'#5dcef0'}} onClick={handleCreateSale}>+Add to Sale</button>\r\n      </div>\r\n\r\n      {/* Generate Final Bill */}\r\n      <div>\r\n        <h2>Generate Final Bill</h2>\r\n        <button  style={{backgroundColor:'#76f05b'}} onClick={handleGenerateFinalBill}>Generate Bill and Download PDF</button>\r\n      </div>\r\n\r\n      {/* Display Final Bill */}\r\n      <div>\r\n        <h2>Final Bill</h2>\r\n        <table border=\"1\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Category</th>\r\n              <th>Price</th>\r\n              <th>Tax Name</th>\r\n              <th>Tax Rate</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {finalBill.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{item.name}</td>\r\n                <td>{item.category}</td>\r\n                <td>{item.price}$</td>\r\n                <td>{item.taxRate ? item.taxName : 'N/A'}</td>\r\n                <td>{item.taxName ? item.taxRate : 'N/A'}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerApp;\r\n","import React, { useState, useEffect } from 'react';\r\nimport DB from './db/firebase.js';\r\n\r\nconst AdminPanel = () => {\r\n  const [productCategories, setProductCategories] = useState([]);\r\n  const [taxRates, setTaxRates] = useState([]);\r\n  const [taxNames, setTaxNames] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [categoryName, setCategoryName] = useState('');\r\n  const [taxRate, setTaxRate] = useState('');\r\n  const [taxName, setTaxName] = useState('');\r\n  const [productName, setProductName] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [selectedTaxName, setSelectedTaxName] = useState('');\r\n  const [productPrice, setProductPrice] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch product categories from Firestore\r\n    const fetchCategories = async () => {\r\n      const categoriesSnapshot = await DB.collection('productCategories').get();\r\n      const categoriesData = categoriesSnapshot.docs.map((doc) => doc.data().name);\r\n      setProductCategories(categoriesData);\r\n    };\r\n\r\n    // Fetch tax rates from Firestore\r\n    const fetchTaxRates = async () => {\r\n      const taxRatesSnapshot = await DB.collection('taxRates').get();\r\n      const taxRatesData = taxRatesSnapshot.docs.map((doc) => doc.data().rate);\r\n      setTaxRates(taxRatesData);\r\n    };\r\n\r\n    // Fetch tax names from Firestore\r\n    const fetchTaxNames = async () => {\r\n      const taxNamesSnapshot = await DB.collection('taxNames').get();\r\n      const taxNamesData = taxNamesSnapshot.docs.map((doc) => doc.data().name);\r\n      setTaxNames(taxNamesData);\r\n    };\r\n\r\n    // Fetch products from Firestore\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const productsSnapshot = await DB.collection('products').get();\r\n        const productsData = productsSnapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setProducts(productsData);\r\n      } catch (error) {\r\n        console.error('Error fetching products: ', error);\r\n      }\r\n    };\r\n\r\n    fetchCategories();\r\n    fetchTaxRates();\r\n    fetchTaxNames();\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const handleAddData = async () => {\r\n    if (!productName || !productPrice || (!selectedCategory && !categoryName) || (!selectedTaxName && !taxName) || !taxRate) {\r\n      setErrorMessage('All fields are mandatory.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n       \r\n      // Add Product to Firestore\r\n      await DB.collection('products').add({\r\n        name: productName,\r\n        category: selectedCategory || categoryName,\r\n        price: parseFloat(productPrice),\r\n        taxRate: parseFloat(taxRate),\r\n        taxName: selectedTaxName || taxName,\r\n\r\n      })\r\n      // Clear input fields\r\n      setErrorMessage('');\r\n      setProductName('');\r\n      setSelectedCategory('');\r\n      setProductPrice('');\r\n      setTaxRate('');\r\n      setSelectedTaxName('');\r\n      setCategoryName('');\r\n      setTaxName('');\r\n\r\n      // Refresh products after adding new data\r\n    //   fetchProducts();\r\n    } catch (error) {\r\n      setErrorMessage('Error adding product: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const filteredProducts = products.filter((product) =>\r\n      product.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setProducts(filteredProducts);\r\n  };\r\n\r\n  const handleEdit = (productId, updatedData) => {\r\n    DB.collection('products').doc(productId).set(updatedData);\r\n  };\r\n\r\n  const handleDelete = (productId) => {\r\n\r\n    DB.collection('products').doc(productId).delete().then(() => {\r\n      \r\n      // Refresh products after deletion\r\n    //   fetchProducts();\r\n    });\r\n    // window.location.reload()\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.title}>Admin Panel</h2>\r\n\r\n      <div style={styles.formContainer}>\r\n        <label style={styles.formLabel}>\r\n          Product Name:\r\n          <input\r\n            type=\"text\"\r\n            value={productName}\r\n            onChange={(e) => setProductName(e.target.value)}\r\n            style={styles.formInput}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.formLabel}>\r\n          Product Category:\r\n          <select\r\n            value={selectedCategory}\r\n            onChange={(e) => setSelectedCategory(e.target.value)}\r\n            style={styles.formInput}\r\n          >\r\n            <option value=\"\" disabled>Select category...</option>\r\n            {productCategories.map((category) => (\r\n              <option key={category} value={category}>{category}</option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            value={categoryName}\r\n            onChange={(e) => setCategoryName(e.target.value)}\r\n            style={styles.formInput}\r\n            placeholder=\"Or type a new category...\"\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.formLabel}>\r\n          Tax Rate (%):\r\n          <input\r\n            type=\"text\"\r\n            value={taxRate}\r\n            onChange={(e) => setTaxRate(e.target.value)}\r\n            style={styles.formInput}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.formLabel}>\r\n          Tax Name:\r\n          <select\r\n            value={selectedTaxName}\r\n            onChange={(e) => setSelectedTaxName(e.target.value)}\r\n            style={styles.formInput}\r\n          >\r\n            <option value=\"\" disabled>Select tax name...</option>\r\n            {taxNames.map((tax) => (\r\n              <option key={tax} value={tax}>{tax}</option>\r\n            ))}\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            value={taxName}\r\n            onChange={(e) => setTaxName(e.target.value)}\r\n            style={styles.formInput}\r\n            placeholder=\"Or type a new tax name...\"\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.formLabel}>\r\n          Product Price:\r\n          <input\r\n            type=\"text\"\r\n            value={productPrice}\r\n            onChange={(e) => setProductPrice(e.target.value)}\r\n            style={styles.formInput}\r\n          />\r\n        </label>\r\n\r\n        <button style={styles.formButton} onClick={handleAddData}>\r\n          Add Data\r\n        </button>\r\n\r\n        {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n      </div>\r\n\r\n      <div style={styles.searchContainer}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by Product Name\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          style={styles.searchInput}\r\n        />\r\n        <button style={styles.searchButton} onClick={handleSearch}>\r\n          Search\r\n        </button>\r\n      </div>\r\n\r\n      <table style={styles.table}>\r\n        <thead>\r\n          <tr>\r\n            <th>Product Name</th>\r\n            <th>Product Category</th>\r\n            <th>Tax Rate (%)</th>\r\n            <th>Tax Name</th>\r\n            <th>Product Price</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map((product) => (\r\n            <tr key={product.id}>\r\n              <td>{product.name}</td>\r\n              <td>{product.category}</td>\r\n              <td>{product.taxRate || ''}</td>\r\n              <td>{product.taxName || ''}</td>\r\n              <td>{product.price}</td>\r\n              <td>\r\n                <button\r\n                  onClick={() => {\r\n                    const updatedName = prompt('Enter updated product name:', product.name);\r\n                    if (updatedName !== null) {\r\n                      handleEdit(product.id, { name: updatedName });\r\n                    }\r\n                  }}\r\n                >\r\n                  Edit\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <button onClick={() => handleDelete(product.id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100vh',\r\n  },\r\n  title: {\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n    marginBottom: '20px',\r\n  },\r\n  formContainer: {\r\n    width: '400px',\r\n    padding: '20px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#fff',\r\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\r\n    marginBottom: '20px',\r\n  },\r\n  formLabel: {\r\n    marginBottom: '10px',\r\n    fontSize: '14px',\r\n    fontWeight: 'bold',\r\n  },\r\n  formInput: {\r\n    width: '100%',\r\n    padding: '8px',\r\n    borderRadius: '4px',\r\n    border: '1px solid #ccc',\r\n    boxSizing: 'border-box',\r\n    marginBottom: '15px',\r\n    fontSize: '14px',\r\n  },\r\n  formButton: {\r\n    backgroundColor: '#64f5fa',\r\n    color: '#fff',\r\n    padding: '10px',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    fontSize: '16px',\r\n  },\r\n  searchContainer: {\r\n    display: 'flex',\r\n    marginBottom: '20px',\r\n  },\r\n  searchInput: {\r\n    width: '200px',\r\n    padding: '8px',\r\n    borderRadius: '4px',\r\n    border: '1px solid #ccc',\r\n    boxSizing: 'border-box',\r\n    marginRight: '10px',\r\n  },\r\n  searchButton: {\r\n    backgroundColor: '#64f5fa',\r\n    color: '#fff',\r\n    padding: '8px',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n  table: {\r\n    borderCollapse: 'collapse',\r\n    width: '80%',\r\n    marginTop: '20px',\r\n  },\r\n  'table th, table td': {\r\n    border: '1px solid #ddd',\r\n    padding: '8px',\r\n    textAlign: 'left',\r\n  },\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React from 'react';\r\nimport HEADER from './components/Header';\r\nimport './App.css';\r\n\r\nimport BILLINGROW from './components/billingrow';\r\nimport ADDPRODUCTS from './components/Addproducts';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport AdminPanel from './components/Addproducts';\r\n\r\nfunction App() {\r\n  return (\r\n      <>\r\n      <div className=\"App\">\r\n          {/* This is the alias of BrowserRouter i.e. Router */}\r\n          <Router>\r\n              <Routes>\r\n                  {/* This route is for home component \r\n        with exact path \"/\", in component props \r\n        we passes the imported component*/}\r\n                  <Route\r\n                      exact\r\n                      path=\"/\"\r\n                      element={<><HEADER/> \r\n                                <BILLINGROW/></>}\r\n                  />\r\n                  <Route\r\n                      exact\r\n                      path=\"/addproducts\"\r\n                      element={<><HEADER/>\r\n                      <AdminPanel/>\r\n                      </>}\r\n                  />\r\n{/* \r\n                  {/* This route is for about component \r\n        with exact path \"/about\", in component \r\n        props we passes the imported component*/}\r\n                  {/* <Route\r\n                      path=\"/about\"\r\n                      element={<About />}\r\n                  />\r\n\r\n                  {/* This route is for contactus component\r\n        with exact path \"/contactus\", in \r\n        component props we passes the imported component*/}\r\n                  {/* <Route\r\n                      path=\"/contactus\"\r\n                      element={<ContactUs />}\r\n                  /> */}\r\n\r\n                  {/* If any route mismatches the upper \r\n        route endpoints then, redirect triggers \r\n        and redirects app to home component with to=\"/\" */}\r\n                  {/* <Redirect to=\"/\" /> */}\r\n                  {/* <Route\r\n                      path=\"*\"\r\n                      element={<Navigate to=\"/\" />} */}\r\n                  {/* /> */} \r\n              </Routes>\r\n          </Router>\r\n          </div>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//      <HEADER/>\r\n//      <BILLINGROW/>\r\n//       {/* <Todo /> */}\r\n//       <ADDPRODUCTS/>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}